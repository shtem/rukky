$ 
   function rotateArray(ar[], d) that rotates arr[] by d elements
   Input arr[] = [1, 2, 3, 4, 5, 6, 7], d = 2
   Output arr[] = [3, 4, 5, 6, 7, 1, 2]
$


:: real[] slice := (real[] arr, real start, real end) {
    real[] subset := []
    real sliceLength := end - start

    for:: i := 0 ; sliceLength ; 1 {
        subset << arr[start + i]
    }

    return:: subset
}

:: real[] rotateArray := (real[] arr, real d) {
    real n := len:arr::
    real[] temp
    real i

    while:: i < d {
        temp << arr[i]
        i := i + 1
    }
    i := 0
    while:: d < n {
        arr@i := arr[d]
        i := i + 1
        d := d + 1
    }
    real[] rotArr := slice:arr,0,i:: + temp
    return:: rotArr
}

real[] array := [1, 2, 3, 4, 5, 6, 7]
real d := 2
display:"Array before left rotation by d=" + getStr:d:: + " is: " + getStr:array::::
display:"result: " + getStr:rotateArray:array, d::::::